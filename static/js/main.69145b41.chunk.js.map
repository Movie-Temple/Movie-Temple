{"version":3,"sources":["MTLogoTurqPerspTrans.png","features/searchTerm.js","components/website/contents/search/SearchBar.jsx","components/images/user.png","components/website/header/HeadBar.jsx","components/website/contents/footerContents/Career.jsx","components/website/contents/footerContents/Policy.jsx","components/website/contents/footerContents/Faq.jsx","components/website/contents/footerContents/AboutUs.jsx","features/currentMovie.js","components/website/contents/home/GenreScroller.jsx","components/website/contents/home/Movies.jsx","components/website/contents/playMovie/PlayMovie.jsx","components/website/contents/home/Purchased.jsx","components/website/contents/home/Rented.jsx","components/website/contents/home/Watchlist.jsx","firebase.js","features/currentUser.js","contexts/AuthContext.js","components/website/contents/account/signIn/SignIn.jsx","components/website/contents/home/Home.jsx","components/website/contents/search/SearchPage.jsx","components/website/contents/search/Search.jsx","components/website/contents/footerContents/Support.jsx","components/website/contents/account/signUp/SignUp.jsx","components/website/contents/account/profile/ProfileHistory.jsx","features/bankCard.js","components/website/contents/account/profile/ProfileSettings.jsx","components/website/contents/account/profile/Profile.jsx","components/website/contents/account/AccountContainer.jsx","components/website/footer/Footer.jsx","components/popup/Popup.jsx","components/website/contents/movieContent/MovieComments.jsx","features/currentMovieComments.js","features/rating.js","components/website/contents/movieContent/MovieDetails.jsx","components/website/WebsiteRoute.jsx","components/movieDb.js","components/api.js","features/movies.js","features/purchasedMovies.js","features/rentedMovies.js","features/watchlistMovies.js","App.js","serviceWorker.js","features/rootReducer.js","index.js"],"names":["replaceSearchTerm","createAction","reducer","createReducer","state","action","payload","SearchBar","useState","searchTerm","setSearchTerm","dispatch","useDispatch","history","useHistory","handleSave","push","className","onChange","event","target","value","toLowerCase","id","placeholder","name","onKeyPress","key","htmlFor","HeadBar","to","src","Logo","alt","userIcon","Career","Policy","Faq","AboutUs","replaceMovie","Title","Poster","Plot","Actors","Runtime","Year","Metascore","Genre","imdbID","SideScroller","scrollerName","genre","movies","useSelector","map","movie","indexOf","onClick","handleCLick","Movies","GenreScroller","PlayMovie","props","console","log","handleClose","Purchased","purchasedMovies","playMovieIsOpen","setPlayMovieIsOpen","toggleplayMovieIsOpen","onPosterClick","Rented","rentedMovies","sum","rentExpires","Date","now","Math","floor","timeLeft","Watchlist","watchlistMovies","handleClick","app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","setCurrentUserUid","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","currentUser","setCurrentUser","useEffect","onAuthStateChanged","user","signup","email","password","createUserWithEmailAndPassword","signin","signInWithEmailAndPassword","signout","signOut","Provider","SignIn","toggleShowSignIn","emailRef","useRef","passwordRef","error","setError","loading","setLoading","e","a","preventDefault","current","then","uid","Alert","variant","type","ref","disabled","Home","currentUserUid","tabNameToIndex","0","1","2","3","selectedTab","setSelectedTab","AppBar","position","Tabs","newValue","Tab","label","SearchPage","Search","Support","SignUp","nameRef","passwordConfirmRef","resp","collection","doc","set","bankCard","purchased","rented","watchlist","ProfileHistory","toLocaleDateString","setBankCard","ProfileSettings","showCardDetails","setShowCardDetails","cardRef","merge","catch","Profile","showSettings","setShowSettings","toggleShowSettings","userName","setUserName","onSnapshot","result","data","AccountContainer","userID","showSignIn","setShowSignIn","Container","Footer","Popup","content","MovieComments","movieComments","rating","currentMovie","ratingScore","parseFloat","toFixed","commentRef","ratingRef","haveRated","setHaveRated","haveCommented","setHaveCommented","role","aria-label","update","Number","uuid","comments","addComments","addRating","MovieDetails","confirmedPurchase","setConfirmedPurchase","foundInRented","find","findmovie","foundInPurchased","foundInWatchlist","rentIsOpen","setRentIsOpen","toggleRentPopup","buyIsOpen","setBuyIsOpen","toggleBuyPopup","showingComments","setShowingComments","total","commentList","Object","keys","forEach","movieID","rentMovie","buyMovie","FieldValue","delete","changeWatchlist","WebsiteRoute","exact","path","from","render","titles","title","infoUrl","fetch","response","json","getMovie","addMovies","setPurchasedMovies","initialState","setRentedMovies","setWatchlistMovies","App","setMovies","Promise","all","fetchAll","purchasedToAdd","rentedToAdd","watchlistToAdd","tempMovies","addedToWatchlist","Boolean","window","location","hostname","match","rootReducer","combineReducers","moviesReducer","currentMovieReducer","searchTermReducer","currentMovieCommentsReducer","ratingReducer","store","configureStore","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69145b41.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MTLogoTurqPerspTrans.56f4f0e1.png\";","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\n\nconst replaceSearchTerm = createAction('replace searchterm');\n\nconst inititalState = '';\n\n\n\nconst reducer = createReducer(inititalState, {\n    [replaceSearchTerm] : (state, action) => (\n        action.payload\n    )\n});\n\nexport {replaceSearchTerm, reducer};","import React from \"react\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport { replaceSearchTerm } from \"../../../../features/searchTerm\";\n\nconst SearchBar = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      handleSave();\n      setSearchTerm(\"\");\n    }\n  };\n\n  const handleSave = () => {\n    dispatch(replaceSearchTerm(searchTerm));\n    history.push('/Search');\n  };\n\n  return (\n    <section className=\"search-container\">\n      <form>\n        <input\n          onChange={(event) => {\n            setSearchTerm(event.target.value.toLowerCase());\n          }}\n          className=\"search\"\n          id=\"searchleft\"\n          placeholder=\"Search movies\"\n          name=\"q\"\n          value={searchTerm}\n          onKeyPress={handleKeyPress} />\n        <label className=\"button searchbutton\" htmlFor=\"searchleft\">\n          <span className=\"mglass\">&#9906;</span>\n        </label>\n      </form>\n    </section>\n  );\n};\n\nexport default SearchBar;\n","export default __webpack_public_path__ + \"static/media/user.8a3c03fa.png\";","import {Link} from 'react-router-dom';\nimport Logo from '../../../MTLogoTurqPerspTrans.png'\nimport '../header/headBar.css';\nimport SearchBar from '../../website/contents/search/SearchBar'\nimport userIcon from '../../images/user.png';\nconst HeadBar = () => {\n\n    return (\n        <div className='nav'>\n            <div className='nav-search-link'>\n                <SearchBar/>\n            </div>\n            <div className='nav-logo-link'>\n                <Link  to=\"/\">\n                    <img className='home-icon-img' src={Logo} alt='Logo'></img>\n                </Link>\n            </div>\n            <div className='nav-login-link'>\n                <Link to=\"/Account\"> <img className='login-icon-img' src={userIcon} alt='User Icon'></img></Link>\n            </div>\n        </div>\n    )\n}\n\nexport default HeadBar;","import './career.css'\n\nconst Career = () => {\n\n    return (\n        <div className='career'>\n            <h2 className='career-header'>Job / Career</h2>\n            <p>We are looking for fullstack developers to join our amazing and ambitious team.<br/>\n            Are you the one we are looking for?<br /><br />\n            Send your resume and cover letter to: <br /><br />MT_developers@teammovietemple.com\n            </p>\n        </div>\n    )\n}\n\nexport default Career;","import './policy.css'\n\nconst Policy = () => {\n\n    return (\n        <div className='policy'>\n            <h2 className='policy-header'>Policy</h2>\n            <p>Movie Temple AB (hereby referred to as “The man”) claims the right to own you (the user, hereby referred to as “the loser”), your family and averything you will ever create and/or own.\n                Do not for a second confuse your life for an actual life, as you now exist solely to serve The man. \n                Any objections to these terms are futile and may result in the loser being terminated.\n                None of the loser’s data is treated in accordance with GDPR and they never will.\n            </p>\n\n            <button>Got it!</button>\n        </div>\n    )\n}\n\nexport default Policy;","import './faq.css'\n\nconst Faq = () => {\n\n    return (\n        <div className='faq'>\n            <h2 className='faq-header'>FAQ</h2>\n            <p>Here you can find answers to the most common questions asked by the site users<br/><br/>\n                1. How do I find a movie?<br/>\n                Enter a search word in the search bar in the top left corner.<br/><br/>\n                2. I am interested in working at Movie Temple - how should I proceed?<br/>\n                Check out our Career site for more information about open positions.<br/><br/>\n                3. How many movies do you have?<br/>\n                There are approximately 1000 movies available for you to enjoy.<br/><br/>\n            </p>\n        </div>\n    )\n}\n\nexport default Faq;","import './aboutUs.css'\n\nconst AboutUs = () => {\n\n    return (\n        <div className='about-us'>\n            <h2 className='about-us-header'>About Us</h2>\n            <p>We are a team of developers. We made this site, please enjoy. <br/><br/>\n                Instagram: @DoesNotExistMovieTemple<br/>\n                Facebook: Your Local MovieTemple Does Not Exist\n            </p>\n        </div>\n    )\n}\n\nexport default AboutUs;","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\n\nconst replaceMovie = createAction('replace movie');\n\nconst inititalState = {\n    Title: '',\n    Poster: '',\n    Plot: '',\n    Actors: '',\n    Runtime: '',\n    Year: '',\n    Metascore: '',\n    Genre: '',\n    imdbID: ''\n};\n\n\n\nconst reducer = createReducer(inititalState, {\n    [replaceMovie] : (state, action) => (\n        {\n            Title: action.payload.Title,\n            Poster: action.payload.Poster,\n            Plot: action.payload.Plot,\n            Actors: action.payload.Actors,\n            Runtime: action.payload.Runtime,\n            Year: action.payload.Year,\n            Metascore: action.payload.Metascore,\n            Genre: action.payload.Genre,\n            imdbID: action.payload.imdbID\n        }\n    )\n});\n\nexport {replaceMovie, reducer};","import './scroller.css';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { replaceMovie } from \"../../../../features/currentMovie\";\n\n\nconst SideScroller = ({scrollerName, genre}) => {\n    const history = useHistory();\n    const movies = useSelector(state => state.movies);\n    const dispatch = useDispatch();\n  \n    const handleCLick = (movie) => {\n        return (\n            dispatch(replaceMovie(movie)),\n            history.push('/moviedetails')\n        )\n    }\n\n    return ( \n        <div className='sideScroller'>\n            <h3 className='scrollerName'>{scrollerName}</h3>\n            <div className='scrollerWrapper'>\n                {movies.map((movie) => {\n                    return ((movie.Genre.toLowerCase().indexOf(genre) !== -1) ?\n                        <div className='scrollerItem' onClick={() => {handleCLick(movie)}} key={movie.imdbID}>\n                            <img className='scrollerImg' src={movie.Poster} alt={movie.Title} />\n                            <p className='scrollerTitle'>{movie.Title}</p>\n                        </div>\n                        : null\n                    );\n                })}  \n            </div>\n             \n        </div>\n    )\n}\n\nexport default SideScroller;","import './movies.css';\nimport GenreScroller from './GenreScroller';\n//import PersonalScroller from './PersonalScroller';\n\nconst Movies = () => {\n    \n\n    return (\n        <div className='categories'>\n            \n            <GenreScroller scrollerName='Comedy' genre={'comedy'}/>\n            <GenreScroller scrollerName='Action' genre= {'action'}/>\n            <GenreScroller scrollerName='Drama' genre= {'drama'}/>\n            <GenreScroller scrollerName='Adventure' genre= {'adventure'}/>\n            <GenreScroller scrollerName='Sport' genre= {'sport'}/>\n            <GenreScroller scrollerName='Thriller' genre= {'thriller'}/>\n            \n        </div>\n    )\n\n}\n\nexport default Movies;\n\n/*<PersonalScroller scrollerName='Purchased' category='purchased' />\n            <PersonalScroller scrollerName='Purchased' category='rented' />\n            <PersonalScroller scrollerName='Purchased' category='watchList' /> */","import './playMovie.css';\n\nconst PlayMovie = (props) => {\n\n    console.log('inside playmovie')\n\n    return (\n        <div className='play-movie'>\n            <span className=\"play-close-icon\" onClick={props.handleClose}>x</span>\n            <h1 className='play-movie-text'>Playing movie</h1>\n        </div>\n    )\n}\n\nexport default PlayMovie;","import './purchased.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport PlayMovie from '../playMovie/PlayMovie';\nimport { useState } from 'react';\nimport { replaceMovie } from '../../../../features/currentMovie';\nimport { useHistory } from 'react-router';\n\nconst Purchased = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const purchasedMovies = useSelector(state => state.purchasedMovies);\n\n    // play movie\n    const [playMovieIsOpen, setPlayMovieIsOpen] = useState(false);\n    const toggleplayMovieIsOpen = () => {\n        setPlayMovieIsOpen(!playMovieIsOpen);\n    }\n\n    const onPosterClick = (movie) => {\n        return (\n            dispatch(replaceMovie(movie)),\n            history.push('/moviedetails')\n        )\n    }\n\n    return (\n        <div className='purchased'>\n            {purchasedMovies.map((movie) => {\n                    return ( purchasedMovies ?\n                        <div key={movie.imdbID}>\n                            <div className='purchased-scrollerItem' key={movie.imdbID}>\n                            <img className='purchased-scrollerImg' onClick={() => {onPosterClick(movie)}} src={movie.Poster} alt={movie.Title} />\n                            </div>\n                            <button className='purchased-play-button' onClick={toggleplayMovieIsOpen}>Play</button>\n                            \n                            {playMovieIsOpen && <PlayMovie\n                                handleClose={toggleplayMovieIsOpen}\n                            />}\n\n                        </div>\n\n                        : null\n                    );\n                })}  \n        </div>\n    );\n}\n\nexport default Purchased;\n\n","import './rented.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PlayMovie from '../playMovie/PlayMovie';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { replaceMovie } from '../../../../features/currentMovie';\n\nconst Rented = () => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const rentedMovies = useSelector(state => state.rentedMovies);\n    \n\n    // play movie\n    const [playMovieIsOpen, setPlayMovieIsOpen] = useState(false);\n    const toggleplayMovieIsOpen = () => {\n        setPlayMovieIsOpen(!playMovieIsOpen);\n    }\n\n    const onPosterClick = (movie) => {\n        return (\n            dispatch(replaceMovie(movie)),\n            history.push('/moviedetails')\n        )\n    }\n\n    return (\n        <div className='rented'>\n            \n            {rentedMovies.map((movie) => {\n                const timeLeft = () => {\n                    let sum = movie.rentExpires - Date.now();\n                    let hours = Math.floor(sum / 3600000);\n                    return (\n                        hours\n                    )\n                }\n                    return ( rentedMovies ?\n                        <div className='rented-scrollerItem' key={movie.imdbID}>\n                            <div>\n                                <img className='rented-scrollerImg' onClick={() => {onPosterClick(movie)}} src={movie.Poster} alt={movie.Title} />\n                                <button className='rented-play-button' onClick={toggleplayMovieIsOpen}>Play</button>\n                                <p>{timeLeft()} hours left</p>\n                            </div>\n\n                            {playMovieIsOpen && <PlayMovie\n                                handleClose={toggleplayMovieIsOpen}\n                            />}\n                            \n                        </div>\n                        : null\n                    );\n                })}  \n\n        </div>\n    );\n}\n\nexport default Rented;","import './watchlist.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { replaceMovie } from \"../../../../features/currentMovie\";\nimport { useHistory } from 'react-router';\n\nconst Watchlist = () => {\n\n    const watchlistMovies = useSelector(state => state.watchlistMovies);\n    const dispatch = useDispatch();\n    const history = useHistory()\n\n    const handleClick = (movie) => {\n        return (\n            dispatch(replaceMovie(movie)),\n            history.push('/moviedetails')\n        )\n    }\n\n    return (\n        <div className='watchlist'>\n            {watchlistMovies.map((movie) => {\n                    return ( watchlistMovies ?\n                        <div className='watchlist-scrollerItem' key={movie.imdbID} onClick={() => {handleClick(movie)}}>\n                            <img className='watchlist-scrollerImg' src={movie.Poster} alt={movie.Title} />\n                        </div>\n                        : null\n                    );\n                })}  \n        </div>\n    );\n}\n\nexport default Watchlist;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nconst app = firebase.initializeApp({\n    apiKey: \"AIzaSyB3Eg3OkdU7EhHSNWCbw6m2_8v-I4l9Rvw\",\n    authDomain: \"movie-temple.firebaseapp.com\",\n    projectId: \"movie-temple\",\n    storageBucket: \"movie-temple.appspot.com\",\n    messagingSenderId: \"202326160820\",\n    appId: \"1:202326160820:web:4025f076b750db357d6ee1\",\n    measurementId: \"G-T6502ZXBJF\"\n\n});\n\n\nexport const auth = app.auth();\nexport const db = app.firestore();\n\n\nexport default app;\n","import { createAction } from \"@reduxjs/toolkit\";\n\n\nconst setCurrentUserUid = createAction('set current user uid')\nconst initialState = '';\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'set current user uid':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport {reducer, setCurrentUserUid};","import React, { useContext, useState, useEffect } from 'react';\nimport 'firebase/auth';\nimport { auth } from '../firebase';\nimport {useDispatch} from 'react-redux';\nimport {setCurrentUserUid} from '../features/currentUser';\n//import { db } from '../firebase';\n\nconst AuthContext = React.createContext();\n\nexport function useAuth() {\n    return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n\n    const dispatch = useDispatch();\n\n    const [currentUser, setCurrentUser] = useState('');\n     \n    function signup(email, password) {\n        return auth.createUserWithEmailAndPassword(email, password);\n    }\n\n    function signin(email, password) {\n        return auth.signInWithEmailAndPassword(email, password);\n    }\n\n    function signout() {\n        return auth.signOut();\n    }\n\n    useEffect( () => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if (user == null) {\n                dispatch(setCurrentUserUid(''));\n            } else {\n                setCurrentUser(user);\n            }\n        })\n        \n        return unsubscribe;\n    }, [dispatch]);\n\n    const value = {\n        currentUser,\n        signup,\n        signin,\n        signout\n    };\n\n    return (\n        <AuthContext.Provider value={value}>\n            {children}\n        </AuthContext.Provider>\n    );\n\n}","import './signIn.css';\nimport React, { useRef, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { useAuth } from '../../../../../contexts/AuthContext';\nimport { useDispatch } from 'react-redux';\nimport { setCurrentUserUid } from '../../../../../features/currentUser';\n\nconst SignIn = ({toggleShowSignIn}) => {\n\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const { signin } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const dispatch = useDispatch();\n\n    const { currentUser } = useAuth();\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setError(\"\");\n            setLoading(true);\n            await signin(emailRef.current.value, passwordRef.current.value)\n                .then(() => {\n\n                    dispatch(setCurrentUserUid(currentUser.uid));\n                })\n            console.log(\"Logged in!\");\n            setError(\"Logged in!\");\n        } catch {\n            setError(\"Failed to log in\");\n            console.log('error', error);\n        }\n        setLoading(false)\n    }\n\n\n    return (\n        <div className='login'>\n            <div className='login-container'>\n                <h2 className='login-header'>Sign in</h2>\n                {error && <Alert variant=\"danger\"> {error} </Alert>}\n                <form className='login-form' action=''>\n                    <label htmlFor='login-email'>E-mail</label><br/>\n                    <input type='text' id='login-email' name='login-email' ref={emailRef}/><br/>\n                    <label htmlFor='login-password'>Password</label><br/>\n                    <input type='text' id='login-password' name='login-password' ref={passwordRef}/><br/>\n                </form>\n\n                <button onClick={handleSubmit} disabled={loading}>Sign in</button>\n                <div className='login-signup'>Don't have an account? Click here to <p className='login-signup-link' onClick={toggleShowSignIn}>sign up</p></div>\n            </div>\n        </div>\n    )\n}\n\nexport default SignIn;","import { useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport Movies from './Movies';\nimport Purchased from './Purchased';\nimport Rented from './Rented';\nimport WatchList from './Watchlist';\nimport './homeTabs.css';\nimport { useSelector} from 'react-redux';\nimport SignIn from '../account/signIn/SignIn';\nimport { AuthProvider } from '../../../../contexts/AuthContext';\n\nconst Home = () => {\n\n    const currentUserUid = useSelector(state => state.currentUserUid);\n    const history = useHistory();\n\n    const tabNameToIndex = {\n        0: \"Movies\",\n        1: \"Purchased\",\n        2: \"Rented\",\n        3: \"WatchList\"\n    };\n\n    const [selectedTab, setSelectedTab] = useState(0);\n    const handleChange = (event, newValue) => {\n        history.push(`/Home/${tabNameToIndex[newValue]}`);\n        setSelectedTab(newValue);\n    };\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n\n                <Tabs className='tabs' value={selectedTab} onChange={handleChange} variant='fullWidth'>\n                    <Tab className={selectedTab === 0 ? 'selectedTab' : ''} label=\"Movies\" />\n                    <Tab className={selectedTab === 1 ? 'selectedTab' : ''} label=\"Purchased\" />\n                    <Tab className={selectedTab === 2 ? 'selectedTab' : ''} label=\"Rented\" />\n                    <Tab className={selectedTab === 3 ? 'selectedTab' : ''} label=\"Watchlist\" />\n                </Tabs>\n\n            </AppBar>\n            \n            <AuthProvider>\n            \n                \n            \n                { currentUserUid ? \n                <div>\n                    {selectedTab === 0 && <Movies />}\n                    {selectedTab === 1 && <Purchased />}\n                    {selectedTab === 2 && <Rented />}\n                    {selectedTab === 3 && <WatchList />}\n                </div> \n                : \n                <div>\n                    {selectedTab === 0 && <Movies />}\n                    {selectedTab === 1 && <SignIn />}\n                    {selectedTab === 2 && <SignIn />}\n                    {selectedTab === 3 && <SignIn />}\n                </div>}\n            \n            </AuthProvider>\n\n        </div>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { replaceMovie } from \"../../../../features/currentMovie\";\nimport './searchPage.css'\n\nconst SearchPage = () => {\n  const movies = useSelector((state) => state.movies);\n  const searchTerm = useSelector(state => state.searchTerm);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  \n  // const filteredData = React.useMemo(() => {\n  //   //if (searchTerm === \"\") return movies;\n  //   return movies.filter((item) => \n  //     //console.log(item.Title)\n  //     item.Title.toLowerCase().includes(searchTerm)\n  //   );\n  // }, [movies, searchTerm]);\n\n\n  const handleCLick = (movie) => {\n    return (\n        dispatch(replaceMovie(movie)),\n        history.push('/moviedetails')\n    )\n}\n\n  return (\n    <>\n      <div className=\"searchBody\">\n          {movies.map((movie) => {\n              return ((movie.Title.toLowerCase().indexOf(searchTerm) !== -1) ?\n                  <div className='searchItem' onClick={() => {handleCLick(movie)}} key={movie.imdbID}>\n                      <img className='searchImg' src={movie.Poster} alt={movie.Title} />\n                  </div>\n                  : null);\n            })}  \n      </div> \n    </>\n  );\n};\n\nexport default SearchPage;\n","import React from 'react';\nimport SearchPage from '../search/SearchPage';\n\nconst Search = () => {\n\n    return (\n        <div>\n            <SearchPage />\n        </div>\n    )\n}\n\nexport default Search;","import './support.css'\n\nconst Support = () => {\n\n    return (\n        <div className='support'>\n            <h2 className='support-header'>Need help?</h2>\n            <p>We are here to help you with any issues that you might run into when browsing our site. <br/><br />\n            Contact us at: MT_developers@teammovietemple.com\n            </p>\n        </div>\n    )\n}\n\nexport default Support;","import React, { useRef, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { useAuth } from '../../../../../contexts/AuthContext';\nimport './signUp.css';\nimport { db } from '../../../../../firebase';\nimport { useDispatch } from 'react-redux';\nimport {setCurrentUserUid} from '../../../../../features/currentUser';\n\nexport default function SignUp({toggleShowSignIn}) {\n\n    const nameRef = useRef()\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const passwordConfirmRef = useRef();\n\n    const { signup } = useAuth();\n    const [error, setError] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const dispatch = useDispatch();\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Password do not match!\");\n        }\n        \n        if (nameRef.current.value === '') {\n            return setError('Enter your name');\n        }\n\n        try {\n            setError(\"\");\n            setLoading(true);\n            await signup(emailRef.current.value, passwordRef.current.value)\n                .then((resp) => {\n                    db.collection('CUSTOMERS').doc(resp.user.uid).set({\n                        name: nameRef.current.value,\n                        email: emailRef.current.value,\n                        bankCard: '',\n                        purchased: {},\n                        rented: {},\n                        watchlist: {}\n                    })\n                    dispatch(setCurrentUserUid(resp.user.uid))\n                })\n            setError(\"Your account is now created!\");\n        } catch {\n            setError(\"Failed to create an account!\");\n            console.log(error);\n        }\n        setLoading(false)\n    }\n\n    return (\n\n        <div className='register'>\n            <div className='register-container'>\n                <h2 className='register-header'>Sign up</h2>\n                {error && <Alert variant=\"danger\"> {error} </Alert>}\n                <form className='register-form' action=''>\n\n                    <label htmlFor='register-name'>Name</label><br />\n                    <input type='text' id='register-name' name='register-name' ref={nameRef} /><br />\n\n                    <label htmlFor='register-email'>E-mail</label><br />\n                    <input type='text' id='register-email' name='register-email' ref={emailRef} /><br />\n\n                    <label htmlFor='register-password'>Password</label><br />\n                    <input type='text' id='register-password' name='register-password' ref={passwordRef} /><br />\n\n                    <label htmlFor='register-repeat-password'>Repeat Password</label><br />\n                    <input type='text' id='register-repeat-password' name='register-repeat-password' ref={passwordConfirmRef} /><br />\n                </form>\n\n                <button onClick={handleSubmit} disabled={loading} >Sign up</button>\n                <div className='register-signin'>Already have an account? Click here to <p className='register-signin-link' onClick={toggleShowSignIn}>sign in</p></div>\n            </div>\n        </div>\n    );\n}","import '../profile/profileHistory.css'\nimport { useSelector } from 'react-redux';\n\n\nconst ProfileHistory = () => {\n\n    const rentedMovies = useSelector(state => state.rentedMovies)\n    const purchasedMovies = useSelector(state => state.purchasedMovies)\n\n    return (\n        <div className='profile-history'>\n            <div className='profile-history-list'>\n                <h4>Rented</h4>\n                {rentedMovies.map((movie) => {\n                    return ((movie) ?\n                        <div key={movie.imdbID} className='profile-history-listitem'>\n                            <p>{movie.Title}: {new Date(movie.rented).toLocaleDateString('sv-SE')}</p>\n                        </div>\n                    : null\n                    )\n                })}\n                <h4>Purchased</h4>\n                {purchasedMovies.map((movie) => {\n                    return ((movie) ?\n                        <div key={movie.imdbID} className='profile-history-listitem'>\n                            <p>{movie.Title}: {new Date(movie.purchased).toLocaleDateString('sv-SE')}</p>\n                        </div>\n                    : null\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n\nexport default ProfileHistory;","import { createAction } from \"@reduxjs/toolkit\";\n\n\nconst setBankCard = createAction('set bank card')\nconst initialState = '';\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'set bank card':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport {reducer, setBankCard};","import '../profile/profileSettings.css';\n\nimport { useRef, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../../../../firebase';\nimport { setBankCard } from '../../../../../features/bankCard';\n\nconst ProfileSettings = () => {\n\n    const dispatch = useDispatch();\n    const [showCardDetails, setShowCardDetails] = useState(false);\n    const cardRef = useRef();\n    const currentUserUid = useSelector(state => state.currentUserUid);\n    const bankCard = useSelector(state => state.bankCard);\n\n    const toggleShowCardDetails = () => {\n        setShowCardDetails(!showCardDetails);\n    }\n\n\n    const save = () => {\n\n        if (currentUserUid) {\n            db.collection(\"CUSTOMERS\").doc(currentUserUid).set({\n                bankCard: cardRef.current.value,\n            }, { merge: true })\n            .then(() => {\n                dispatch(setBankCard(cardRef.current.value))\n                console.log(\"card details successfully added\");\n                setShowCardDetails(false);\n            })\n            .catch((error) => {\n                console.error(\"error saving card details: \", error);\n            }); \n        } else {\n            console.log('no useruid, one have to log in to add card details')\n        }\n    }\n\n    return (\n        <div className='profile-settings'>\n            <p className='profile-settings-change-card' onClick={toggleShowCardDetails}>Add/edit payment details</p>\n            {showCardDetails \n            ? \n            <div>\n                <input id='card-details' name='card-details' placeholder={bankCard} ref={cardRef} />\n                <button className='profile-settings-save-card-button' onClick={save}>Save</button> \n            </div>\n            : \n            ''}\n            <br/>\n        </div>\n    )\n}\n\nexport default ProfileSettings;\n","import './profile.css';\nimport { useAuth } from '../../../../../contexts/AuthContext';\nimport { useState } from 'react';\nimport ProfileHistory from './ProfileHistory';\nimport ProfileSettings from './ProfileSettings';\nimport { useSelector } from 'react-redux';\nimport { db } from '../../../../../firebase';\n\nconst Profile = () => {\n\n    const { signout } = useAuth();\n\n    const [showSettings, setShowSettings] = useState(true);\n\n    const toggleShowSettings = () => {\n        setShowSettings(!showSettings);\n    }\n\n    const currentUserUid = useSelector(state => state.currentUserUid);\n\n    const [userName, setUserName] = useState('');\n\n\n    db.collection(\"CUSTOMERS\").doc(currentUserUid)\n        .onSnapshot((doc) => {\n            const result = doc.data().name;\n            setUserName(result);\n        });\n\n    return (\n        <div className='profile'>\n            <div className='profile-headings-container'>\n\n                <div className='profile-sub-headings-container'>\n                    <h3 className={showSettings ? 'profile-sub-heading selected' : 'profile-sub-heading'} onClick={toggleShowSettings}>Settings</h3>\n                    <h3 className={showSettings ? 'profile-sub-heading' : 'profile-sub-heading selected'} onClick={toggleShowSettings}>History</h3>\n                </div>\n            </div>\n            <hr className='profile-breakline'/>\n            <div className='profile-container'>\n\n                <div className='profile-history-settings-container'>\n                    {showSettings ? <ProfileSettings /> : <ProfileHistory />}\n                </div>\n            </div>\n            <div className='profile-image-name-container'>\n                    {/*<img className='profile-image' src={Avatar} alt=\"profile pic\" />*/}\n                    <h4 className='profile-name'>Signed in as {userName}</h4>\n                    <button className='profile-signout-button' onClick={signout}>Sign Out</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","import SignUp from './signUp/SignUp';\nimport { Container } from 'react-bootstrap';\nimport {AuthProvider} from '../../../../contexts/AuthContext';\nimport {useSelector} from 'react-redux';\nimport Profile from './profile/Profile';\nimport SignIn from './signIn/SignIn';\nimport { useState } from 'react';\n\nconst AccountContainer = () =>  {\n\n    const userID = useSelector(state => state.currentUserUid);\n    \n    const [showSignIn, setShowSignIn]  = useState(true);\n\n    const toggleShowSignIn = () => {\n        setShowSignIn(!showSignIn);\n    }\n    \n    return (\n\n    <div>\n        {userID ?\n        <div>\n            <AuthProvider>\n                <Container >\n                    <div >\n                        <Profile />\n                    </div>\n                </Container>\n            </AuthProvider>\n        </div>\n        : \n        <div>\n            <AuthProvider>\n                <Container >\n                    <div >\n                        {showSignIn ? <SignIn toggleShowSignIn={toggleShowSignIn}/> : <SignUp toggleShowSignIn={toggleShowSignIn}/>}\n                    </div>\n                </Container>\n            </AuthProvider>\n        </div>\n        }\n    </div>\n\n    )\n}\n\nexport default AccountContainer;","import './footer.css';\nimport { useHistory } from 'react-router-dom';\n\n\nconst Footer = () => {\n\n    const history = useHistory();\n  \n    function clickAboutUs() {\n      history.push(\"/AboutUs\");\n    }\n\n    function clickSupport() {\n        history.push(\"/Support\");\n    }\n\n    function clickCareer() {\n        history.push(\"/Career\");\n    }\n      \n    function clickPolicy() {\n        history.push(\"/Policy\");\n    }\n    \n    function clickFaq() {\n        history.push(\"/FAQ\");\n    }\n\n    return (\n        <div className=\"footer\">\n            <p className='footer-element' onClick={clickAboutUs} >About</p>\n            <p className='footer-element' onClick={clickSupport}>Support</p>\n            <p className='footer-element' onClick={clickCareer}>Career</p>\n            <p className='footer-element' onClick={clickPolicy}>Policy</p>\n            <p className='footer-element' onClick={clickFaq}>FAQ</p>\n            </div>\n    );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport './popup.css'\nimport { useSelector } from 'react-redux';\n\nconst Popup = props => {\n\n  const bankCard = useSelector(state => state.bankCard);\n\n  return (\n    <div>\n      {bankCard ? \n      <div>\n        <div className=\"popup-box\">\n          <div className=\"box\">\n            <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n            {props.content}\n          </div>\n        </div>\n      </div>\n      : \n      <div>\n        <div className=\"popup-box\">\n          <div className=\"box\">\n            <span className=\"close-icon\" onClick={props.handleClose}>x</span>\n            <p> It's required to add payment methods in your Profile to complete the process!</p>\n          </div>\n        </div>\n      </div>}\n    </div>\n  );\n};\n\nexport default Popup;","import './movieComments.css';\nimport { useSelector} from 'react-redux';\nimport { db } from '../../../../firebase';\nimport uuid from 'react-uuid';\nimport { useRef, useState } from 'react';\n\nconst MovieComments = () => {\n    \n    const movieComments = useSelector(state => state.movieComments);\n    const rating = useSelector(state => state.rating);\n    const movie = useSelector(state => state.currentMovie);\n\n    // used to disable buttons if not signed in\n    const currentUserUid = useSelector(state => state.currentUserUid);\n\n    const ratingScore = parseFloat(rating[0]/rating[1]).toFixed(2);\n    \n    const commentRef = useRef();\n    const ratingRef = useRef();\n\n    const [haveRated, setHaveRated] = useState(false);\n    const [haveCommented, setHaveCommented] = useState(false);\n\n    // comment func\n    const leaveComments = () => {\n        let comments = {};\n        comments[uuid()] = commentRef.current.value;\n        setHaveCommented(true);\n        db.collection(\"COMMENTS\").doc(movie.imdbID).set({comments}, {merge: true})\n        commentRef.current.value = \"You've commented!\";\n    };\n\n    // rate func\n    const leaveRating = () => {\n        setHaveRated(true);\n        db.collection(\"COMMENTS\").doc(movie.imdbID).update({\n            \"rating\": rating[0] + Number(ratingRef.current.value),\n            \"total\": rating[1] + 1\n        })\n        ratingRef.current.value = \"You've rated!\";\n    };\n\n    const getRatingText = () => {\n        if (rating[1] > 0) {\n            return (\n                <span>Rating: {ratingScore} <span role=\"img\" aria-label=\"star\">⭐</span>({rating[1]} voted)</span>\n            )\n        } else {\n            return (\n                <span>No votes yet!</span>\n            )\n        }\n\n    }\n\n    return (\n        <div className='movie-comments'>\n\n            <h2>{getRatingText()} </h2>\n            \n            <input type='text' id='rating' name='rating' placeholder=\"0-10\" ref={ratingRef} />\n            <button className='movie-comment-button' onClick={leaveRating} disabled={haveRated || !currentUserUid}>Rate!</button>\n            \n            <h2>Comments</h2> \n            \n            {movieComments.map((movie) => {\n                    return ( \n                        <div>\n                            {movieComments ?\n\n                            <div className='movie-comments-comments' key={uuid()}>\n                                <p>{movie}</p>\n                            </div>\n                            :\n                            <div className='movie-comments-comments' key={uuid()}>\n                                <p>No comments at the moment! Leave one?</p>\n                            </div>\n                            }\n                        </div>\n                    );\n                })}  \n            \n                <input className='movie-comment-input' type='text' id='comment' name='comment' ref={commentRef} />\n                <button className='movie-comment-button' onClick={leaveComments} disabled={haveCommented || !currentUserUid}>Comment!</button>\n        </div>\n    )\n\n}\n\nexport default MovieComments;\n\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\n\n\nconst addComments = createAction('add comments');\n\nconst initialState = [];\n\n\n\nconst reducer = createReducer(initialState, {\n    [addComments] : (state, action) => (\n        action.payload\n    )\n});\n\n\nexport {addComments, reducer};","import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\n\n\nconst addRating = createAction('add rating');\n\nconst initialState = [];\n\n\n\nconst reducer = createReducer(initialState, {\n    [addRating] : (state, action) => (\n        action.payload\n    )\n});\n\n\nexport {addRating, reducer};","import './movieDetails.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { db } from '../../../../firebase';\nimport Popup from '../../../popup/Popup'\nimport React, { useState } from \"react\";\nimport MovieComments from './MovieComments';\nimport { addComments } from '../../../../features/currentMovieComments';\nimport { addRating } from '../../../../features/rating';\nimport firebase from 'firebase/app';\n\nconst MovieDetails = () => {\n\n    // state to change text in popup to confirm purchase when rent or buy movie\n    const [confirmedPurchase, setConfirmedPurchase] = useState(false);\n\n    //const movieComments = useSelector(state => state.movieComments);\n    const dispatch = useDispatch();\n\n    const movie = useSelector(state => state.currentMovie);\n    const userID = useSelector(state => state.currentUserUid);\n    const rentedMovies = useSelector(state => state.rentedMovies);\n    const purchasedMovies = useSelector(state => state.purchasedMovies);\n    const watchlistMovies = useSelector(state => state.watchlistMovies);\n\n    //checks if movie already exists in rented, purchased or watchlist. Sets buttons accordingly.\n    const foundInRented = rentedMovies.find(findmovie => findmovie.imdbID === movie.imdbID);\n    const foundInPurchased = purchasedMovies.find(findmovie => findmovie.imdbID === movie.imdbID);\n    const foundInWatchlist = watchlistMovies.find(findmovie => findmovie.imdbID === movie.imdbID);\n\n    //rent popup\n    const [rentIsOpen, setRentIsOpen] = useState(false);\n    const toggleRentPopup = () => {\n        setRentIsOpen(!rentIsOpen);\n    }\n\n    //buy popup\n    const [buyIsOpen, setBuyIsOpen] = useState(false);\n    const toggleBuyPopup = () => {\n        setBuyIsOpen(!buyIsOpen);\n    }\n\n    // Toggle comments\n    const [showingComments, setShowingComments] = useState(false);\n    const toggleComments = () => {\n        setShowingComments(!showingComments);\n    }\n\n    // Loading comments\n    //useEffect(() => {\n        db.collection(\"COMMENTS\").doc(movie.imdbID)\n        .onSnapshot((doc) => {\n            const comments = doc.data().comments;\n            const rating = doc.data().rating;\n            const total = doc.data().total;\n            \n            let ratingList = [rating, total];\n            dispatch(addRating(ratingList));\n\n            let commentList = [];\n            Object.keys(comments).forEach(key => {\n                commentList.push(comments[key])\n            })\n            \n            dispatch(addComments(commentList));\n        });\n         \n     //}, [])\n\n\n    const rentMovie = ((movieID) => {\n        if (userID) {\n            let rented = {};\n            rented[movieID] = Date.now();\n            db.collection('CUSTOMERS').doc(userID).set({ rented }, { merge: true });\n            setConfirmedPurchase(true);\n        } else {\n            console.log('not logged in')\n        }\n    });\n\n    const buyMovie = ((movieID) => {\n        if (userID) {\n            let purchased = {};\n            purchased[movieID] = Date.now();\n            db.collection('CUSTOMERS').doc(userID).set({ purchased }, { merge: true })\n            setConfirmedPurchase(true);\n        } else {\n            console.log('not logged in')\n        }\n    });\n\n    const changeWatchlist = ((movieID) => {\n        if (foundInWatchlist) {\n            if (userID) {\n                db.collection(\"CUSTOMERS\")\n                .doc(userID)\n                .set({\n                    watchlist: {\n                        [movieID]: firebase.firestore.FieldValue.delete()\n                    }\n                }, { merge: true });\n            }\n        } else {\n            if (userID) {\n                let watchlist = {};\n                watchlist[movieID] = Date.now();\n                db.collection('CUSTOMERS').doc(userID).set({ watchlist }, { merge: true })\n            } else {\n                console.log('not logged in')\n            }\n        }\n    });\n\n    if (movie == null) {\n        return (\n            <div className='movie-details'>Something went wrong. Nothing to show..</div>\n        )\n    } else {\n        return (\n            <div className='movie-details'>\n                <img className='movie-details-image' src={movie.Poster} alt=\"Poster\" />\n\n                <div className='movie-details-information'>\n                    <h2 className='movie-details-title'>{movie.Title}</h2>\n                    <p className='movie-details-description'>{movie.Plot}</p>\n                    <p className='movie-details-actors'> Actors: {movie.Actors}</p>\n                    <p className='movie-details-runtime'>Runtime: {movie.Runtime}</p>\n                    <p className='movie-details-year'>Release year: {movie.Year}</p>\n                    <p className='movie-details-metascore'>Metascore: {movie.Metascore}</p>\n                    <p className='movie-details-genre'>Genre: {movie.Genre}</p>\n                    <div className='movie-details-buttons'>\n\n\n                        {rentIsOpen && <Popup\n                            content={\n                                confirmedPurchase ?\n                                    <>\n                                        <b>Purchase completed!</b>\n                                    </>\n                                    :\n                                    <>\n                                        <b>Confirm Purchase</b>\n                                        <button className='details-confirm-button' onClick={() => rentMovie(movie.imdbID)}>Rent</button>\n                                    </>\n                            }\n                            handleClose={toggleRentPopup}\n                        />}\n\n                        {buyIsOpen && <Popup\n                            content={\n                                confirmedPurchase ?\n                                    <>\n                                        <b>Purchase completed!</b>\n                                    </>\n                                    :\n                                    <>\n                                        <b>Confirm Purchase</b>\n                                        <button className='details-confirm-button' onClick={() => buyMovie(movie.imdbID)}>Buy</button>\n                                    </>\n                            }\n                            handleClose={toggleBuyPopup}\n                        />}\n                        <button\n                            disabled={foundInRented}\n                            className={foundInRented ? 'rent-button disabled' : 'rent-button'}\n                            onClick={toggleRentPopup}>{foundInRented ? 'Already rented' : 'Rent: 39 kr'}\n                        </button>\n\n                        <button\n                            disabled={foundInPurchased}\n                            className={foundInPurchased ? 'buy-button disabled' : 'buy-button'}\n                            onClick={toggleBuyPopup}>{foundInPurchased ? 'Already bought' : 'Buy: 99 kr'}\n                        </button>\n\n                        <button\n                            onClick={() => changeWatchlist(movie.imdbID)}\n                            className='watchlist-button'>{foundInWatchlist ? 'Remove from Watchlist' : 'Add to Watchlist'}\n                        </button>\n                        <button onClick={() => toggleComments()}>{showingComments ? 'Hide Comments' : 'View Comments'}</button>\n                    </div>\n\n                        \n                    <div className='movie-details-comment-section'>\n\n                        {showingComments ? <MovieComments /> : null}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default MovieDetails;","import React from 'react'\nimport HeadBar from './header/HeadBar';\nimport Career from './contents/footerContents/Career';\nimport Policy from './contents/footerContents/Policy';\nimport FAQ from './contents/footerContents/Faq';\nimport AboutUs from './contents/footerContents/AboutUs';\nimport Home from './contents/home/Home';\nimport Search from './contents/search/Search';\nimport Support from './contents/footerContents/Support';\nimport AccountContainer from './contents/account/AccountContainer';\nimport { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Footer from './footer/Footer';\nimport MovieDetails from './contents/movieContent/MovieDetails';\n\nconst WebsiteRoute = () => {\n  return (\n\n    <Router>\n        \n        <div>\n            <HeadBar />\n        </div>\n\n        <Switch>\n            <Route exact path=\"/Account\">\n                <AccountContainer />\n            </Route>\n\n            <Route exact path=\"/Search\">\n                <Search />\n            </Route>\n\n            <Route exact path=\"/AboutUs\">\n                <AboutUs />\n            </Route>\n\n            <Route exact path=\"/Support\">\n                <Support />\n            </Route>\n\n            <Route exact path=\"/Career\">\n                <Career />\n            </Route>\n\n            <Route exact path=\"/Policy\">\n                <Policy />\n            </Route>\n\n            <Route exact path=\"/FAQ\">\n                <FAQ />\n            </Route>\n\n            <Route exact path='/moviedetails'>\n                <MovieDetails />\n            </Route>\n            \n    \n            <Redirect exact from=\"/\" to=\"/Home/Categories\" />\n\n            <Route exact path=\"/Home/:page?\" render={props => <Home {...props} />} />\n            </Switch>\n\n            <div>\n                <Footer />\n            </div>\n\n    </Router>);\n}\n\nexport default WebsiteRoute;\n\n","\n\n\nconst titles = [\n    'thor',\n    'iron man',\n    'happy gilmore',\n    'the matrix',\n    'pulp fiction',\n    'the rock',\n    'the shining',\n    'metropolis',\n    'transformers',\n    'vanishing point',\n    'venom',\n    'nobody',\n    'the falcon and the winter soldier',\n    'mortal kombat',\n    'raya and the last dragon',\n    'love and monsters',\n    'nomadland',\n    'shadow and bone',\n    'sound of metal',\n    'godzilla',\n    'soul',\n    'secret magic control agency',\n    'wandavision',\n    'my octopus teacher',\n    'dirty dancing',\n    'top gun',\n    'back to the future',\n    'frozen',\n    'dumb and dumber',\n    'spirited away',\n    'aviator',\n    'totoro',\n    'the karate kid',\n    'days of thunder',\n    '300',\n    'gladiator',\n    'grease',\n    'avatar',\n    'the blues brothers',\n    'godzilla vs. kong',\n    'the eye'\n\n]\n\n\n\nexport default titles;","\n\n\n\n\n\nasync function getMovie(title) {\n    let infoUrl = `http://www.omdbapi.com/?t=${title}&plot=short&apikey=a79f43b6`;\n\n\n    try {\n        let response = await fetch(infoUrl);\n        let data = await response.json();\n        data['rented'] = 0;\n        data[\"rentExpires\"] = 0;\n        data['purchased'] = 0;\n        data['addedToWatchlist'] = 0;\n        return data;\n\n    }\n    catch(error) {\n        console.log(\"error\")\n    }\n}\nexport default getMovie;","\nimport { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nconst addMovies = createAction('add movies');\n\nconst initialState = [];\n\n\n\nconst reducer = createReducer(initialState, {\n    [addMovies] : (state, action) => (\n        action.payload\n    )\n});\n\n\nexport {addMovies, reducer};","import { createAction } from \"@reduxjs/toolkit\";\n\n\nconst setPurchasedMovies = createAction('set purchased movies')\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'set purchased movies':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport {reducer, setPurchasedMovies};","import { createAction } from '@reduxjs/toolkit';\n\nconst setRentedMovies = createAction('set rented movies');\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case 'set rented movies': return action.payload;\n        default: return state;\n    }\n};\n\nexport { reducer, setRentedMovies }; \n","import { createAction } from \"@reduxjs/toolkit\";\n\n\nconst setWatchlistMovies = createAction('set watchlist movies')\nconst initialState = [];\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case 'set watchlist movies':\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport {reducer, setWatchlistMovies}; ","import './App.css';\nimport WebsiteRoute from './components/website/WebsiteRoute'\nimport titles from './components/movieDb';\nimport { useState, useEffect } from 'react';\nimport getMovie from './components/api'\nimport { useDispatch, useSelector} from 'react-redux';\nimport {addMovies} from './features/movies';\nimport {db} from './firebase'\nimport { setPurchasedMovies } from './features/purchasedMovies';\nimport { setRentedMovies } from './features/rentedMovies';\nimport { setWatchlistMovies } from './features/watchlistMovies';\nimport { setBankCard } from './features/bankCard';\n\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [movies, setMovies] = useState([]);\n  const currentUserUid = useSelector(state => state.currentUserUid);\n  \n  useEffect(() => {\n    const fetchAll = async () => setMovies(\n      await Promise.all(titles.map(getMovie))\n        \n    );\n    fetchAll();\n    \n  }, [])\n\n  useEffect(() => {\n    dispatch(addMovies(movies))\n    \n  }, [movies, dispatch])\n\n\n  \n\n  const getMovieLists = () => {\n    if (currentUserUid) {\n        db.collection(\"CUSTOMERS\").doc(currentUserUid)\n        .onSnapshot((doc) => {\n                const purchased = doc.data().purchased;\n                const rented = doc.data().rented;\n                const watchlist = doc.data().watchlist;\n                const bankCard = doc.data().bankCard;\n                let purchasedToAdd = [];\n                let rentedToAdd = [];\n                let watchlistToAdd = [];\n                let tempMovies = movies.map(movie => ({...movie}));\n\n                if (purchased) {\n                    Object.keys(purchased).forEach(key => {\n                        const movie = tempMovies.find(movie => movie.imdbID === key)\n                        movie.purchased = purchased[key];\n                        purchasedToAdd.push(movie)\n                    })\n                    dispatch(setPurchasedMovies(purchasedToAdd));\n                } else {\n                    console.log('nothing purchased')\n                }\n\n                if (rented) {\n                  Object.keys(rented).forEach(key => {\n                    const movie = tempMovies.find(movie => movie.imdbID === key)\n                    movie.rented = rented[key];\n                    movie.rentExpires = rented[key] + 172800000;\n                    if (movie.rentExpires > Date.now()) {\n                      rentedToAdd.push(movie)\n                    }\n                  })\n                  dispatch(setRentedMovies(rentedToAdd));\n\n                } else {\n                    console.log('no rentals')\n                }\n\n                if (watchlist) {\n                    Object.keys(watchlist).forEach(key => {\n                        const movie = tempMovies.find(movie => movie.imdbID === key)\n                        movie.addedToWatchlist = watchlist[key];\n                        watchlistToAdd.push(movie)\n                    })\n                    dispatch(setWatchlistMovies(watchlistToAdd));\n                } else {\n                    console.log('nothing in watchlist')\n                }\n\n                if (bankCard) {\n                  dispatch(setBankCard(bankCard));\n                }\n        });\n    }\n}\n\nif (currentUserUid) {\n    getMovieLists();\n} else {\n    //console.log('not logged in, not getting personal lists')\n}\n\n  return (\n  \n    <div className=\"App\">\n      <WebsiteRoute />\n    </div>\n\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as moviesReducer} from './movies';\nimport { reducer as currentMovieReducer} from './currentMovie';\nimport { reducer as searchTermReducer} from './searchTerm';\nimport { reducer as currentUserReducer} from './currentUser';\nimport {reducer as purchasedMoviesReducer} from './purchasedMovies';\nimport { reducer as rentedMoviesReducer } from './rentedMovies';\nimport { reducer as watchlistMoviesReducer } from './watchlistMovies';\nimport { reducer as bankCardReducer } from './bankCard';\nimport { reducer as currentMovieCommentsReducer } from './currentMovieComments';\nimport { reducer as ratingReducer } from './rating';\n\nconst rootReducer = combineReducers({\n    movies: moviesReducer,\n    currentMovie: currentMovieReducer,\n    searchTerm:  searchTermReducer,\n    currentUserUid: currentUserReducer,\n    purchasedMovies: purchasedMoviesReducer,\n    rentedMovies: rentedMoviesReducer,\n    watchlistMovies: watchlistMoviesReducer,\n    bankCard: bankCardReducer,\n    movieComments: currentMovieCommentsReducer,\n    rating: ratingReducer\n});\n\n\nexport {rootReducer};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {rootReducer} from './features/rootReducer';\nimport { configureStore } from '@reduxjs/toolkit';\n\n\n\nconst store = configureStore({\n\treducer: rootReducer\n});\n\n\n\nReactDOM.render(\n  \t<React.StrictMode>\n    \t<Provider store={store}>\n\t\t\t<div>hej hej</div>\n      \t\t<App />\n    \t</Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}